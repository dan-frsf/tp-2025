spring.application.name=gateway
server.port=8080
spring.cloud.gateway.server.webmvc.enabled=true
spring.main.web-application-type=servlet

spring.cloud.gateway.server.webmvc.routes[0].id=user-svc
spring.cloud.gateway.server.webmvc.routes[0].uri=http://user-svc:8080
spring.cloud.gateway.server.webmvc.routes[0].predicates[0]=Path=/users/**
spring.cloud.gateway.server.webmvc.routes[0].filters[0]=StripPrefix=1

spring.cloud.gateway.server.webmvc.routes[1].id=reservas-svc
spring.cloud.gateway.server.webmvc.routes[1].uri=http://reservas-svc:8080
spring.cloud.gateway.server.webmvc.routes[1].predicates[0]=Path=/reservas/**
spring.cloud.gateway.server.webmvc.routes[1].filters[0]=StripPrefix=1

spring.cloud.gateway.server.webmvc.routes[2].id=gestion-svc
spring.cloud.gateway.server.webmvc.routes[2].uri=http://gestion-svc:8080
spring.cloud.gateway.server.webmvc.routes[2].predicates[0]=Path=/gestion/**
spring.cloud.gateway.server.webmvc.routes[2].filters[0]=StripPrefix=1

# Management and Metrics
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoints.enabled-by-default=true
management.metrics.export.prometheus.enabled=true
management.tracing.sampling.probability=1.0

# OpenTelemetry Configuration
otel.service.name=${spring.application.name}
otel.exporter.otlp.endpoint=http://otel-collector:4318
otel.exporter.otlp.protocol=http/protobuf
otel.metrics.exporter=otlp
otel.logs.exporter=otlp
otel.traces.exporter=otlp
