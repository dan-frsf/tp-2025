spring.application.name=user-svc
server.port=8080

# ── springdoc-openapi ─────────────────────────────────────────────

# Swagger UI
# springdoc.swagger-ui.path=/swagger-ui                 # URL: http://localhost:8080/docs
# springdoc.swagger-ui.operations-sorter=method   # Ordena operaciones por verbo HTTP
# springdoc.swagger-ui.enabled=true

# # JSON/YAML OpenAPI
# springdoc.api-docs.path=/openapi.json             # URL: http://localhost:8080/openapi.json
# springdoc.api-docs.enabled=true

# ── Configuración MySQL ──────────────────────────────
spring.datasource.url=jdbc:mysql://mysql:3306/users?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
spring.datasource.username=usr_app
spring.datasource.password=usrapp
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# ── Configuración Hikari ──────────────────────────────
spring.datasource.hikari.minimumIdle=2
spring.datasource.hikari.maximumPoolSize=8

# ── Configuración Hibernate ──────────────────────────────
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoints.enabled-by-default=true
management.endpoint.shutdown.enabled=true
management.metrics.export.prometheus.enabled=true
management.tracing.sampling.probability=1.0

# OpenTelemetry Configuration
otel.service.name=${spring.application.name}
otel.exporter.otlp.endpoint=http://otel-collector:4318
otel.exporter.otlp.protocol=http/protobuf
otel.metrics.exporter=otlp
otel.logs.exporter=otlp
otel.traces.exporter=otlp